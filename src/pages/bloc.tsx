import { Alert, Button, Card, Input, Select, Skeleton, Stack } from "@mantine/core"
import { BlocInput, Bloc, BlocInputTypeOption } from "@prisma/client"
import { IconAlertCircle } from "@tabler/icons"
import Head from "next/head"
import { trpc } from "../utils/trpc"
import styles from "./index.module.css"


// enum BlocInputType {
//   text = 'text',
//   select = 'select',
//   checkbox = 'checkbox',
//   radio = 'radio',
//   textarea = 'textarea'
// }

// type BlocInputText = {
//   type: BlocInputType.text
// }

// type BlocInputSelect = {
//   type: BlocInputType.select
//   options: Array<{ value: string, label: string }>
// }

// type BlocInput = { name: string } & (BlocInputText | BlocInputSelect)

// type Bloc = {
//   title: string
//   description?: string
//   inputs: BlocInput[]
// }

// const fetchedBloc: Bloc = {
//   title: 'Mon super formulaire',
//   description: 'Vous pouvez vous enregistrer',
//   inputs: [
//     { name: 'Nom', type: BlocInputType.text },
//     { name: 'Prenom', type: BlocInputType.text },
//     { name: 'Nationalit√©', type: BlocInputType.select, options: [{ value: 'react', label: 'React' }, { value: 'ng', label: 'Angular' }, { value: 'svelte', label: 'Svelte' }, { value: 'vue', label: 'Vue' }] },
//   ]
// }


export default function BlocPage() {
    return (
        <>
            <Head>
                <title>React dynamic form</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className={styles.containerOuter}>
                <div className={styles.containerInner}>
                    <h1 className={styles.title}>
                        <span className={styles.titlePink}>Dynamic form</span>
                    </h1>


                </div>
            </div>
        </>
    )
}



// function InputComponent({ blocInput }: { blocInput: BlocInput }) {

//   switch (blocInput.type) {
//     case 'text':
//       return <Input variant="filled" placeholder={`Your ${blocInput.name}`} />

//     case 'select':
//       return <Select label={blocInput.name} placeholder="Choisir" data={blocInput.options} />

//     default:
//       return <></>
//   }
// }

// function BlocComponent({ bloc }: { bloc: Bloc }) {
//   return (
//     <Card shadow="sm" p="lg" radius="md" withBorder sx={{ width: 350 }}>
//       <h2 className={styles.titleBloc}>{bloc.title}</h2>
//       <Stack>

//         {bloc.description && <Alert icon={<IconAlertCircle size={16} />}>{bloc.description}</Alert>}

//         {bloc.inputs.map((input, i) => (
//           <InputComponent key={i} blocInput={input} />
//         ))}

//         <Button variant="light" color="blue" fullWidth mt="md" radius="md">
//           Ajouter
//         </Button>
//       </Stack>
//     </Card >
//   )
// }